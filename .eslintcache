[{"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\index.tsx":"1","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\reportWebVitals.ts":"2","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\layout\\App.tsx":"3","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\nav\\Nav.tsx":"4","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\sidenavbar\\SideNavBar.tsx":"5","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\transactions-table\\TransactionsTable.tsx":"6","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\transactions-table\\TransactionsBody.tsx":"7","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\transactions-table\\TransactionsFooter.tsx":"8","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\api\\agent.ts":"9","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\models\\Transaction.tsx":"10","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\home\\HomePage.tsx":"11","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\stores\\store.ts":"12","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\stores\\userStore.ts":"13","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\user\\RegisterUser.tsx":"14","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\common\\form\\MyTextInput.tsx":"15","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\user\\LoginUser.tsx":"16","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\stores\\commonStore.ts":"17","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\stores\\transactionStore.ts":"18"},{"size":704,"mtime":1614431558304,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1610198693630,"results":"21","hashOfConfig":"20"},{"size":1326,"mtime":1614462038366,"results":"22","hashOfConfig":"20"},{"size":1423,"mtime":1614433093179,"results":"23","hashOfConfig":"20"},{"size":435,"mtime":1612719907244,"results":"24","hashOfConfig":"20"},{"size":1496,"mtime":1615065003342,"results":"25","hashOfConfig":"20"},{"size":2382,"mtime":1615075364552,"results":"26","hashOfConfig":"20"},{"size":1530,"mtime":1615064970860,"results":"27","hashOfConfig":"20"},{"size":1637,"mtime":1614437651668,"results":"28","hashOfConfig":"20"},{"size":571,"mtime":1615075330201,"results":"29","hashOfConfig":"20"},{"size":105,"mtime":1612719080775,"results":"30","hashOfConfig":"20"},{"size":575,"mtime":1614462471184,"results":"31","hashOfConfig":"20"},{"size":845,"mtime":1614431708178,"results":"32","hashOfConfig":"20"},{"size":2040,"mtime":1614383651351,"results":"33","hashOfConfig":"20"},{"size":622,"mtime":1613857361683,"results":"34","hashOfConfig":"20"},{"size":2381,"mtime":1614430870705,"results":"35","hashOfConfig":"20"},{"size":657,"mtime":1614436843258,"results":"36","hashOfConfig":"20"},{"size":3061,"mtime":1615064317131,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1h23fce",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\index.tsx",[],["79","80"],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\reportWebVitals.ts",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\layout\\App.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\nav\\Nav.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\sidenavbar\\SideNavBar.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\transactions-table\\TransactionsTable.tsx",["81","82","83","84","85","86","87"],"import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\nimport agent from \"../../api/agent\";\r\nimport {\r\n  ICategorizeUserTransactionsDTO,\r\n  IGetByDateDTO,\r\n} from \"../../models/Transaction\";\r\nimport { useStore } from \"../../stores/store\";\r\nimport TransactionsBody from \"./TransactionsBody\";\r\nimport TransactionsFooter from \"./TransactionsFooter\";\r\n\r\nfunction TransactionsTable() {\r\n  const { transactionsStore } = useStore();\r\n  const {\r\n    transactionRegistry: transactions,\r\n    currentPage,\r\n    pagesArray,\r\n    loadTransactions,\r\n    setCurrentPage,\r\n  } = transactionsStore;\r\n\r\n  // TODO: create endpoint to get categories of transaction\r\n\r\n  // page was accessed for the first time\r\n  useEffect(() => {\r\n    console.log(\"First Acess\");\r\n\r\n    let body: IGetByDateDTO = { bankAccountId: 9, year: 2020, month: 1 };\r\n    loadTransactions(body);\r\n  }, [transactionsStore]);\r\n\r\n  return (\r\n    <div>\r\n      <Table celled selectable>\r\n        <Table.Header>\r\n          <Table.Row textAlign=\"center\">\r\n            <Table.HeaderCell>Date</Table.HeaderCell>\r\n            <Table.HeaderCell>Origin</Table.HeaderCell>\r\n            <Table.HeaderCell>Amount</Table.HeaderCell>\r\n            <Table.HeaderCell>Category</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <TransactionsBody />\r\n        <TransactionsFooter />\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(TransactionsTable);\r\n","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\transactions-table\\TransactionsBody.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\transactions-table\\TransactionsFooter.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\api\\agent.ts",["88"],"import axios, { AxiosResponse } from \"axios\";\r\nimport {\r\n  ICategorizeUserTransactionsDTO,\r\n  IGetByDateDTO,\r\n  ITransaction,\r\n} from \"../models/Transaction\";\r\nimport { IUser, ILoginUserDTO, ISignInUserDTO } from \"../models/User\";\r\nimport { store } from \"../stores/store\";\r\n\r\naxios.defaults.baseURL = \"https://localhost:5001/api\";\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Transactions = {\r\n  //TODO: alterar o tipo do body\r\n  DevGetByDate: (body: {}) =>\r\n    requests.post<ITransaction[]>(\"/transactions/DevGetByDate\", body),\r\n  GetByDate: (body: IGetByDateDTO) =>\r\n    requests.post<ITransaction[]>(\"transactions/GetByDate\", body),\r\n  CategorizeAllTransactionsWithSimilarOrigins: (\r\n    body: ICategorizeUserTransactionsDTO\r\n  ) =>\r\n    requests.put<void>(\r\n      \"/transactions/CategorizeAllTransactionsWithSimilarOrigins\",\r\n      body\r\n    ),\r\n};\r\n\r\nconst Users = {\r\n  SignIn: (body: ISignInUserDTO) => requests.post<void>(\"/auth/signin\", body),\r\n  Login: (body: ILoginUserDTO) => requests.post<IUser>(\"/auth/login\", body),\r\n};\r\n\r\nexport default {\r\n  Transactions,\r\n  Users,\r\n};\r\n","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\models\\Transaction.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\home\\HomePage.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\stores\\store.ts",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\stores\\userStore.ts",["89"],"import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { ILoginUserDTO, ISignInUserDTO, IUser } from \"../models/User\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: IUser | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: ILoginUserDTO) => {\r\n    try {\r\n      const user = await agent.Users.Login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      // history.pushState('/home');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    // history.pushState('/home');\r\n  };\r\n}\r\n","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\user\\RegisterUser.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\common\\form\\MyTextInput.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\user\\LoginUser.tsx",["90","91","92"],"import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { Button, Header, Label, Segment } from \"semantic-ui-react\";\r\nimport * as Yup from \"yup\";\r\nimport agent from \"../../api/agent\";\r\nimport MyTextInput from \"../../common/form/MyTextInput\";\r\nimport { ILoginUserDTO } from \"../../models/User\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nfunction LoginUser() {\r\n  const { userStore } = useStore();\r\n  const history = useHistory();\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email(\"Email must be valid\").required(),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  return (\r\n    <Segment>\r\n      <Header content={\"Login\"} color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        initialValues={{ email: \"\", password: \"\", error: null }}\r\n        onSubmit={(values, { setErrors }) =>\r\n          userStore\r\n            .login(values)\r\n            .catch((error) => setErrors({ error: \"Invalid email or password\" }))\r\n        }\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty, errors }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"example@email.com\"\r\n            />\r\n            <MyTextInput\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"your password\"\r\n            />\r\n            <ErrorMessage\r\n              name=\"error\"\r\n              render={() => (\r\n                <Label\r\n                  style={{ marginBottom: 10 }}\r\n                  basic\r\n                  color=\"red\"\r\n                  content={errors.error}\r\n                />\r\n              )}\r\n            />\r\n            <Button\r\n              loading={isSubmitting}\r\n              disabled={!dirty || !isValid}\r\n              type=\"submit\"\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button as={NavLink} to=\"/register-user\" primary>\r\n              Register\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default observer(LoginUser);\r\n","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\stores\\commonStore.ts",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\stores\\transactionStore.ts",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":13},{"ruleId":"97","severity":1,"message":"101","line":6,"column":3,"nodeType":"99","messageId":"100","endLine":6,"endColumn":33},{"ruleId":"97","severity":1,"message":"102","line":16,"column":26,"nodeType":"99","messageId":"100","endLine":16,"endColumn":38},{"ruleId":"97","severity":1,"message":"103","line":17,"column":5,"nodeType":"99","messageId":"100","endLine":17,"endColumn":16},{"ruleId":"97","severity":1,"message":"104","line":18,"column":5,"nodeType":"99","messageId":"100","endLine":18,"endColumn":15},{"ruleId":"97","severity":1,"message":"105","line":20,"column":5,"nodeType":"99","messageId":"100","endLine":20,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":31,"column":6,"nodeType":"108","endLine":31,"endColumn":25,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":48,"column":1,"nodeType":"112","endLine":51,"endColumn":3},{"ruleId":"97","severity":1,"message":"113","line":3,"column":25,"nodeType":"99","messageId":"100","endLine":3,"endColumn":39},{"ruleId":"97","severity":1,"message":"98","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":13},{"ruleId":"97","severity":1,"message":"114","line":9,"column":10,"nodeType":"99","messageId":"100","endLine":9,"endColumn":23},{"ruleId":"97","severity":1,"message":"115","line":14,"column":9,"nodeType":"99","messageId":"100","endLine":14,"endColumn":16},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"@typescript-eslint/no-unused-vars","'agent' is defined but never used.","Identifier","unusedVar","'ICategorizeUserTransactionsDTO' is defined but never used.","'transactions' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'pagesArray' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTransactions'. Either include it or remove the dependency array.","ArrayExpression",["118"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'ISignInUserDTO' is defined but never used.","'ILoginUserDTO' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [loadTransactions, transactionsStore]",{"range":"121","text":"122"},[926,945],"[loadTransactions, transactionsStore]"]