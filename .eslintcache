[{"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\index.tsx":"1","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\reportWebVitals.ts":"2","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\layout\\App.tsx":"3","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\nav\\Nav.tsx":"4","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\sidenavbar\\SideNavBar.tsx":"5","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\transactions-table\\TransactionsTable.tsx":"6","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\transactions-table\\TransactionsBody.tsx":"7","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\transactions-table\\TransactionsFooter.tsx":"8","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\api\\agent.ts":"9","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\models\\Transaction.tsx":"10","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\home\\HomePage.tsx":"11","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\stores\\store.ts":"12","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\stores\\userStore.ts":"13","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\user\\RegisterUser.tsx":"14","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\common\\form\\MyTextInput.tsx":"15"},{"size":704,"mtime":1613605757883,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1610198693630,"results":"18","hashOfConfig":"17"},{"size":1208,"mtime":1613845876574,"results":"19","hashOfConfig":"17"},{"size":611,"mtime":1613845930218,"results":"20","hashOfConfig":"17"},{"size":435,"mtime":1612719907244,"results":"21","hashOfConfig":"17"},{"size":4498,"mtime":1613312046766,"results":"22","hashOfConfig":"17"},{"size":2194,"mtime":1612654751663,"results":"23","hashOfConfig":"17"},{"size":1582,"mtime":1612647023533,"results":"24","hashOfConfig":"17"},{"size":1177,"mtime":1614381796573,"results":"25","hashOfConfig":"17"},{"size":462,"mtime":1613310738569,"results":"26","hashOfConfig":"17"},{"size":105,"mtime":1612719080775,"results":"27","hashOfConfig":"17"},{"size":331,"mtime":1613605557912,"results":"28","hashOfConfig":"17"},{"size":210,"mtime":1613605369006,"results":"29","hashOfConfig":"17"},{"size":2204,"mtime":1614382651148,"results":"30","hashOfConfig":"17"},{"size":622,"mtime":1613857361683,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1h23fce",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\index.tsx",[],["64","65"],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\reportWebVitals.ts",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\layout\\App.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\nav\\Nav.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\sidenavbar\\SideNavBar.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\transactions-table\\TransactionsTable.tsx",["66"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\nimport agent from \"../../api/agent\";\r\nimport {\r\n  ICategorizeUserTransactionsDTO,\r\n  ITransaction,\r\n} from \"../../models/Transaction\";\r\nimport { TransactionsBody } from \"./TransactionsBody\";\r\nimport { TransactionsFooter } from \"./TransactionsFooter\";\r\n\r\nexport const TransactionsTable = () => {\r\n  const [transactions, setTransactions] = useState<ITransaction[]>([]);\r\n  /* Pagination */\r\n  const [transactionPage, setTransactionPage] = useState<ITransaction[]>([]);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [pageSize, setPageSize] = useState<number>(15);\r\n  const [pagination, setPagination] = useState<number[]>([]);\r\n\r\n  /* Async Category Update */\r\n  /*edit cell\r\n    - picking a value from dropdown will change all other transactions of this month with equal origin\r\n    - picking a value from dropdown will also make a request to /api/transactions/CategorizeAllTransactionsWithSimilarOrigins\r\n  */\r\n  const UpdateTransactionsWithSimilarOrigin = (\r\n    transactionId: number,\r\n    value: any\r\n  ) => {\r\n    console.log(\"UpdateTransactionsWithSimilarOrigin\");\r\n    console.log(`transactionId: ${transactionId}, value: ${value}`);\r\n\r\n    let newCategoryId: number = parseInt(value);\r\n    let body: ICategorizeUserTransactionsDTO = {\r\n      transactionId,\r\n      categoryId: newCategoryId,\r\n      userId: 1,\r\n    };\r\n\r\n    agent.Transactions.CategorizeAllTransactionsWithSimilarOrigins(body)\r\n      .then(() => {\r\n        let transaction = transactions.find((t) => t.id === transactionId);\r\n        let updatedTransactions = transactions.map((currentTransaction) => {\r\n          if (currentTransaction.origin === transaction?.origin) {\r\n            return {\r\n              ...currentTransaction,\r\n              category: newCategoryId,\r\n            };\r\n          }\r\n\r\n          return { ...currentTransaction };\r\n        });\r\n\r\n        setTransactions([...updatedTransactions]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Erro na função: CategorizeAllTransactionsWithSimilarOrigins\"\r\n        );\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // TODO: create endpoint to get categories of transaction\r\n\r\n  // page was accessed for the first time\r\n  useEffect(() => {\r\n    console.log(\"First Acess\");\r\n\r\n    const CreatePages = (dataLength: number) => {\r\n      let totalOfPages = dataLength / pageSize;\r\n      let pageArray = [];\r\n      for (let index = 1; index < totalOfPages + 1; index++) {\r\n        pageArray.push(index);\r\n      }\r\n\r\n      setPagination(pageArray);\r\n    };\r\n\r\n    const GetTransactions = () => {\r\n      agent.Transactions.DevGetByDate({\r\n        userId: 1,\r\n        bankAccountId: 9,\r\n        year: 2020,\r\n        month: 1,\r\n      }).then((response) => {\r\n        setTransactions(response);\r\n        CreatePages(response.length);\r\n        // HandlePagination(response.data);\r\n      });\r\n    };\r\n\r\n    GetTransactions();\r\n  }, [pageSize]);\r\n\r\n  // page changed\r\n  useEffect(() => {\r\n    // console.log(\"page changed\");\r\n\r\n    const HandlePagination = (transactionData: ITransaction[]) => {\r\n      let totalOfPages = Math.ceil(transactionData.length / pageSize);\r\n      let startIndex = (currentPage - 1) * pageSize;\r\n      let endIndex = (currentPage - totalOfPages) * pageSize;\r\n\r\n      console.log(\"HandlePagination\");\r\n\r\n      if (endIndex === 0) {\r\n        setTransactionPage([...transactionData.slice(startIndex)]);\r\n      } else {\r\n        setTransactionPage([...transactionData.slice(startIndex, endIndex)]);\r\n      }\r\n    };\r\n\r\n    HandlePagination(transactions);\r\n  }, [currentPage, transactions, pageSize]);\r\n\r\n  return (\r\n    <div>\r\n      <Table celled selectable>\r\n        <Table.Header>\r\n          <Table.Row textAlign=\"center\">\r\n            <Table.HeaderCell>Date</Table.HeaderCell>\r\n            <Table.HeaderCell>Origin</Table.HeaderCell>\r\n            <Table.HeaderCell>Amount</Table.HeaderCell>\r\n            <Table.HeaderCell>Category</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <TransactionsBody\r\n          transactions={[...transactionPage]}\r\n          UpdateTransactionsWithSimilarOrigin={\r\n            UpdateTransactionsWithSimilarOrigin\r\n          }\r\n        />\r\n        <TransactionsFooter\r\n          currentPageNumber={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n          pagination={pagination}\r\n        />\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\transactions-table\\TransactionsBody.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\transactions-table\\TransactionsFooter.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\api\\agent.ts",["67"],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\models\\Transaction.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\home\\HomePage.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\stores\\store.ts",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\stores\\userStore.ts",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\features\\user\\RegisterUser.tsx",[],"C:\\Users\\rabel\\react_projects\\yaba-spa\\src\\app\\common\\form\\MyTextInput.tsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":16,"column":20,"nodeType":"74","messageId":"75","endLine":16,"endColumn":31},{"ruleId":"76","severity":1,"message":"77","line":36,"column":1,"nodeType":"78","endLine":39,"endColumn":3},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-unused-vars","'setPageSize' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]